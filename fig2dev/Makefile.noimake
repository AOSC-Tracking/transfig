# Makefile generated by imake - do not edit!
# $TOG: imake.c /main/97 1997/06/20 20:23:51 kaleb $

# ----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $TOG: Imake.tmpl /main/245 1997/05/20 10:05:47 kaleb $
#

all::

.SUFFIXES: .i

# $TOG: Imake.cf /main/28 1997/06/25 08:31:36 barstow $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def /main/revisionist/4 1996/12/31 08:02:07 kaleb $

# ----------------------------------------------------------------------
# platform-specific configuration parameters - edit sun.cf to change

# platform:  $TOG: sun.cf /main/163 1997/06/08 20:08:23 kaleb $

# operating system:  SunOS (4.1.3)

# $XConsortium: sunLib.rules /main/15 1996/09/28 16:13:16 rws $

# ----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def /main/revisionist/4 1996/12/31 08:02:07 kaleb $

# ---------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $TOG: Imake.rules /main/220 1997/06/05 18:05:16 kaleb $

          PATHSEP = /
            SHELL = /bin/sh

              TOP = ..
      CURRENT_DIR = fig2dev

            IMAKE = imake
           DEPEND = makedepend
        MKDIRHIER = mkdirhier
    EXPORTLISTGEN = exportlistgen
        CONFIGSRC = $(TOP)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend

          INCROOT = /usr/include
        USRLIBDIR = /usr/lib
         SHLIBDIR = /usr/lib
       LINTLIBDIR = $(USRLIBDIR)/lint
          MANPATH = /usr/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
       FILEMANDIR = $(MANSOURCEPATH)$(FILEMANSUFFIX)

               AR = ar clq
  BOOTSTRAPCFLAGS =
               CC = gcc -fpcc-struct-return
               AS = as

         COMPRESS = compress
          GZIPCMD = gzip
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -fpcc-struct-return -E $(STD_CPP_DEFINES)
          INSTALL = install
     INSTALLFLAGS = -c
               LD = ld
              LEX = lex
           LEXLIB = -ll
             YACC = yacc
           CCYACC = yacc
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
        MANSUFFIX = n
     LIBMANSUFFIX = 3
    FILEMANSUFFIX = 5
            TROFF = psroff
            NROFF = nroff
         MSMACROS = -ms
        MANMACROS = -man
              TBL = tbl
              EQN = eqn
             NEQN = neqn
              COL = col

            DVIPS = dvips
            LATEX = latex

     STD_INCLUDES =
  STD_CPP_DEFINES =  $(PROJECT_DEFINES)
      STD_DEFINES =  $(PROJECT_DEFINES)
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES =
             TAGS = ctags

    SHAREDCODEDEF = -DSHAREDCODE
         SHLIBDEF = -DSUNSHLIB

     SHLIBLDFLAGS = -assert pure-text

         PICFLAGS = -fpic

      CXXPICFLAGS = -pic

    PROTO_DEFINES =

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4711
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -g kmem -m 2711

      CDEBUGFLAGS = -O2
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB =
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIBS)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIBS)

           LDLIBS = $(LDPOSTLIBS) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

           CCLINK = $(CC)

          CXXLINK = $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -X -r
      DEPENDFLAGS =

        MACROFILE = sun.cf
           RM_CMD = $(RM)

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/X11.tmpl \
			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) \
			 $(EXTRA_ICONFIGFILES)

# $TOG: X11.rules /main/4 1997/04/30 15:23:24 kaleb $

# ----------------------------------------------------------------------
# X Window System Build Parameters and Rules
# $TOG: X11.tmpl /main/292 1997/05/20 10:05:59 kaleb $

# -----------------------------------------------------------------------
# X Window System make variables; these need to be coordinated with rules

             XTOP = $(TOP)
           BINDIR = /usr/bin/X11
     BUILDINCROOT = $(TOP)/exports
      BUILDINCDIR = $(BUILDINCROOT)/include
      BUILDINCTOP = ../..
      BUILDLIBDIR = $(TOP)/exports/lib
      BUILDLIBTOP = ../..
      BUILDBINDIR = $(TOP)/exports/bin
      BUILDBINTOP = ../..
    XBUILDINCROOT = $(XTOP)/exports
     XBUILDINCDIR = $(XBUILDINCROOT)/include/X11
     XBUILDINCTOP = ../../..
     XBUILDBINDIR = $(XBUILDINCROOT)/bin
           INCDIR = $(INCROOT)
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11
   TOP_X_INCLUDES = -I$(XPROJECTROOT)/include

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
           XSMDIR = $(LIBDIR)/xsm
           NLSDIR = $(LIBDIR)/nls
       XLOCALEDIR = $(LIBDIR)/locale
        PEXAPIDIR = $(LIBDIR)/PEX
      LBXPROXYDIR = $(LIBDIR)/lbxproxy
  PROXYMANAGERDIR = $(LIBDIR)/proxymngr
        XPRINTDIR = $(LIBDIR)
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

              RGB = rgb
            FONTC = bdftopcf
        MKFONTDIR = mkfontdir

       DOCUTILSRC = $(XTOP)/doc/util
       XDOCMACROS = $(DOCUTILSRC)/macros.t
       XIDXMACROS = $(DOCUTILSRC)/indexmacros.t
       PROGRAMSRC = $(TOP)/programs
           LIBSRC = $(XTOP)/lib
          FONTSRC = $(XTOP)/fonts
       INCLUDESRC = $(BUILDINCROOT)/include
      XINCLUDESRC = $(INCLUDESRC)/X11
        SERVERSRC = $(XTOP)/programs/Xserver
       CONTRIBSRC = $(XTOP)/../contrib
   UNSUPPORTEDSRC = $(XTOP)/unsupported
           DOCSRC = $(XTOP)/doc
           RGBSRC = $(XTOP)/programs/rgb
      BDFTOPCFSRC = $(PROGRAMSRC)/bdftopcf
     MKFONTDIRSRC = $(PROGRAMSRC)/mkfontdir
    FONTSERVERSRC = $(PROGRAMSRC)/xfs
       FONTINCSRC = $(XTOP)/include/fonts
        EXTINCSRC = $(XTOP)/include/extensions
     TRANSCOMMSRC = $(LIBSRC)/xtrans
   TRANS_INCLUDES = -I$(TRANSCOMMSRC)

       XENVLIBDIR = $(USRLIBDIR)
   CLIENTENVSETUP = LD_LIBRARY_PATH=$(XENVLIBDIR)

# $TOG: sunLib.tmpl /main/45 1997/02/13 13:52:59 kaleb $

          XLIBSRC = $(LIBSRC)/X11

SOXLIBREV = 4.30
DEPXONLYLIB =
XONLYLIB =  -lX11

LINTXONLY = $(LINTLIBDIR)/llib-lX11.ln

         XLIBONLY = $(XONLYLIB)

      XEXTLIBSRC = $(LIBSRC)/Xext

SOXEXTREV = 4.40
DEPEXTENSIONLIB =
EXTENSIONLIB =  -lXext

LINTEXTENSION = $(LINTLIBDIR)/llib-lXext.ln

LINTEXTENSIONLIB = $(LINTEXTENSION)
          DEPXLIB = $(DEPEXTENSIONLIB) $(DEPXONLYLIB)
             XLIB = $(EXTENSIONLIB) $(XONLYLIB)
         LINTXLIB = $(LINTXONLYLIB)

         XAUTHSRC = $(LIBSRC)/Xau

DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
XAUTHLIB =  -lXau

LINTXAUTH = $(LINTLIBDIR)/llib-lXau.ln

      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
XDMCPLIB =  -lXdmcp

LINTXDMCP = $(LINTLIBDIR)/llib-lXdmcp.ln

           XMUSRC = $(LIBSRC)/Xmu

SOXMUREV = 4.20
DEPXMULIB = $(USRLIBDIR)/libXmu.sa.$(SOXMUREV)
XMULIB =  -lXmu

LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln

       OLDXLIBSRC = $(LIBSRC)/oldX

SOOLDXREV = 4.20
DEPOLDXLIB =
OLDXLIB =  -loldX

LINTOLDX = $(LINTLIBDIR)/llib-loldX.ln

         XPLIBSRC = $(LIBSRC)/Xp

SOXPREV = 6.2
DEPXPLIB =
XPLIB =  -lXp

LINTXP = $(LINTLIBDIR)/llib-lXp.ln

       TOOLKITSRC = $(LIBSRC)/Xt

SOXTREV = 4.20
DEPXTOOLONLYLIB = $(USRLIBDIR)/libXt.sa.$(SOXTREV)
XTOOLONLYLIB =  -lXt

LINTXTOOLONLY = $(LINTLIBDIR)/llib-lXt.ln

      DEPXTOOLLIB = $(DEPXTOOLONLYLIB) $(DEPSMLIB) $(DEPICELIB)
         XTOOLLIB = $(XTOOLONLYLIB) $(SMLIB) $(ICELIB)
     LINTXTOOLLIB = $(LINTXTOOLONLYLIB)

       XALIBSRC = $(LIBSRC)/Xa

DEPXALIB = $(USRLIBDIR)/libXa.a
XALIB =  -lXa

LINTXA = $(LINTLIBDIR)/llib-lXa.ln

       AWIDGETSRC = $(LIBSRC)/Xaw

SOXAWREV = 6.10
DEPXAWLIB = $(USRLIBDIR)/libXaw.sa.$(SOXAWREV)
XAWLIB =  -lXaw

LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln

         XILIBSRC = $(LIBSRC)/Xi

SOXINPUTREV = 4.20
DEPXILIB =
XILIB =  -lXi

LINTXI = $(LINTLIBDIR)/llib-lXi.ln

      XTESTLIBSRC = $(LIBSRC)/Xtst

SOXTESTREV = 1.20
DEPXTESTLIB =
XTESTLIB =  -lXtst

LINTXTEST = $(LINTLIBDIR)/llib-lXtst.ln

        PEXLIBSRC = $(LIBSRC)/PEX5

SOPEXREV = 1.10
DEPPEXLIB =
PEXLIB =  -lPEX5

LINTPEX = $(LINTLIBDIR)/llib-lPEX5.ln

        XIELIBSRC = $(LIBSRC)/XIE

SOXIEREV = 6.0
DEPXIELIB =
XIELIB =  -lXIE

LINTXIE = $(LINTLIBDIR)/llib-lXIE.ln

      PHIGSLIBSRC = $(LIBSRC)/PHIGS

DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
PHIGSLIB =  -lphigs

LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
XBSDLIB =  -lXbsd

LINTXBSD = $(LINTLIBDIR)/llib-lXbsd.ln

           ICESRC = $(LIBSRC)/ICE

SOICEREV = 6.3
DEPICELIB =
ICELIB =  -lICE

LINTICE = $(LINTLIBDIR)/llib-lICE.ln

            SMSRC = $(LIBSRC)/SM

SOSMREV = 6.0
DEPSMLIB =
SMLIB =  -lSM

LINTSM = $(LINTLIBDIR)/llib-lSM.ln

           XKEYSRC = $(LIBSRC)/Xkey

SOXKEYREV = 6.0
DEPXKEYLIB =
XKEYLIB =  -lXkey

LINTXKEY = $(LINTLIBDIR)/llib-lXkey.ln

         FSLIBSRC = $(LIBSRC)/FS

DEPFSLIB = $(USRLIBDIR)/libFS.a
FSLIB =  -lFS

LINTFS = $(LINTLIBDIR)/llib-lFS.ln

         FONTLIBSRC = $(LIBSRC)/font

DEPFONTLIB = $(USRLIBDIR)/libfont.a
FONTLIB =  -lfont

LINTFONT = $(LINTLIBDIR)/llib-lfont.ln

    XKBFILELIBSRC = $(LIBSRC)/xkbfile

DEPXKBFILELIB = $(USRLIBDIR)/libxkbfile.a
XKBFILELIB =  -lxkbfile

LINTXKBFILE = $(LINTLIBDIR)/llib-lxkbfile.ln

     XKBCOMPCMD = xkbcomp

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)
         DEPLIBS4 = $(DEPLIBS)
         DEPLIBS5 = $(DEPLIBS)
         DEPLIBS6 = $(DEPLIBS)
         DEPLIBS7 = $(DEPLIBS)
         DEPLIBS8 = $(DEPLIBS)
         DEPLIBS9 = $(DEPLIBS)
         DEPLIBS10 = $(DEPLIBS)

        CONFIGDIR = $(LIBDIR)/config

    USRLIBDIRPATH = $(USRLIBDIR)
        LDPRELIBS =
       LDPOSTLIBS =
     TOP_INCLUDES =  $(TOP_X_INCLUDES)
  PROJECT_DEFINES =

# ----------------------------------------------------------------------
# start of Imakefile

# Fig2dev : General Fig code translation program
# Copyright (c) 1991 Micah Beck
# Parts Copyright (c) 1995-2000 by Brian V. Smith
# Parts Copyright (c) 1999 by T. Sato

# THE AUTHORS DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
# INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN 0
# EVENT SHALL THE AUTHORS BE LIABLE FOR ANY SPECIAL, INDIRECT OR
# CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
# DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#
# Any party obtaining a copy of these files is granted, free of charge, a
# full and unrestricted irrevocable, world-wide, paid up, royalty-free,
# nonexclusive right and license to deal in this software and
# documentation files (the "Software"), including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons who receive
# copies from any such party to do so, with the only requirement being
# that this copyright notice remain intact.

# ******
# You should point XFIGLIBDIR to the same directory you did when you compiled
# and installed xfig.  This will be made automatic in the future.

XFIGLIBDIR =	/usr/local/lib/X11/xfig

# ******
# If your system has the strerror() function (doesn't have sys_errlist) then
# comment out NEED_STRERROR with an # comment.

NEED_STRERROR = -DNEED_STRERROR

# The following probably only applies to Windows 9x/NT:
# If your system can open files in text and binary modes and has the
# setmode() function, uncomment HAVE_SETMODE

# HAVE_SETMODE = -DHAVE_SETMODE

# ****************
# Uncomment the following line if your compiler supports
# inline functions. With the "INLINE" keyword, you should notice that
# the display will be a bit faster in complex figures

# USEINLINE = -DUSE_INLINE

# ****************
# Change RGB if necessary, to point to your rgb.txt color database
# file (for X11).  This is needed for the -g (background color) option.
# Note that this changed slightly from the previous versions - you need
# the full name (rgb.txt) now.
#

RGB = $(LIBDIR)/rgb.txt

# Comment out the following #define USEPNG if you don't want PNG support
# Uncomment the #define for USEPNG if you want to be able to import
# PNG (Portable Network Graphics) files.

PNGLIBDIR = $(USRLIBDIR)
PNGINC = -I/usr/include/X11

# ****************
# Unomment the #define for USEXPM if you want to use the XPM
# (color pixmap) package.
# You need version 3.4c or newer of the XPM package.
#
# Change XPMLIBDIR if necessary to point to the xpm library (libXpm)
# Change XPMINC if necessary to point to the include file for xpm (xpm.h)
#

# #define USEXPM

# ****************
# If don't want JPEG support, comment out the #define USEJPEG line
# Uncomment the #define for USEJPEG if you want to be able to import
# JPEG (Joint Photographic Experts Group) files.

# ****************
# If you don't have the jpeg library in your system library area (meaning
# that it must be compiled first), comment out the USEINSTALLEDJPEG variable
# (using #), change the JPEGLIBDIR variable to the directory where your
# jpeg library resides and change the JPEGINCDIR to the directory where your
# jpeg header files (include) reside.
# You must have version 5b or newer of the jpeg library.

JPEGLIBDIR = /usr/local/lib
JPEGINCDIR = /usr/include/X11

# ****************
# Uncomment the following to set paper size to A4
# DDA4 = -DA4

# ****************
# Uncomment the following to set IBM Graphics Enhancement Cartridge
# DDIBMGEC = -DIBMGEC

# ****************
# Comment out the DDNFSS = ... line if you don't want NFSS2 font selection
#	for LaTeX texts
# Comment out the DDLATEX2E_GRAPHICS = ... line if you don't want to use the
#	standard graphics package distributed w/ LaTeX2e
# UNcomment the DDEPSFIG = ... line if you want to use the deprecated epsfig macros
#	distributed w/ LaTeX2e (DDLATEX2E_GRAPHICS must also be defined)
#
#     Hint: Users of LaTeX2e will probably want to include both DDNFSS
#		and DDLATEX2E_GRAPHICS options; users of LaTeX 2.09 will
#		probably want to include neither.

DDNFSS = -DNFSS
DDLATEX2E_GRAPHICS = -DLATEX2E_GRAPHICS
# DDEPSFIG = -DEPSFIG

# ****************
# Comment out the DDDVIPS to NOT use dvips for the DVI-to-PostScript driver
DDDVIPS = -DDVIPS

# ****************
# If your system doesn't have strcasecmp and/or strncasecmp
# uncomment the following two definitions

# HAVE_NO_STRCASECMP = -DHAVE_NO_STRCASECMP
# HAVE_NO_STRNCASECMP = -DHAVE_NO_STRNCASECMP

# ****************
# If your system doesn't have strstr() then uncomment the following line
# #define NOSTRSTR

# ****************
# Uncomment the next line if you want use Japanese (i18n) in transfig.

I18N_DEFS = -DI18N
FIG2DEV_LIBDIR = /usr/local/lib/fig2dev
I18N_DEV_DEFS = $(I18N_DEFS) -DFIG2DEV_LIBDIR=\\\"$(FIG2DEV_LIBDIR)\\\"

install::
	[ -d $(DESTDIR)$(FIG2DEV_LIBDIR) ] || mkdir $(DESTDIR)$(FIG2DEV_LIBDIR)
	$(INSTALL) -m 644 -c dev/japanese.ps $(DESTDIR)$(FIG2DEV_LIBDIR)
	( cd $(DESTDIR)$(FIG2DEV_LIBDIR); \
	  rm -f ja.ps ja_JP.ps ja_JP.ujis.ps ja_JP.eucJP.ps ja_JP.EUC.ps; \
	  $(LN) japanese.ps ja.ps; $(LN) japanese.ps ja_JP.ps; \
	  $(LN) japanese.ps ja_JP.ujis.ps; $(LN) japanese.ps ja_JP.eucJP.ps; \
	  $(LN) japanese.ps ja_JP.EUC.ps )
	$(INSTALL) -m 644 -c  dev/korean.ps $(DESTDIR)$(FIG2DEV_LIBDIR)
	( cd $(DESTDIR)$(FIG2DEV_LIBDIR); \
	  rm -f ko.ps ko_KR.ps ko_KR.eucKR.ps ko_KR.EUC.ps; \
	  $(LN) korean.ps ko.ps; $(LN) korean.ps ko_KR.ps; \
	  $(LN) korean.ps ko_KR.eucKR.ps; $(LN) korean.ps ko_KR.EUC.ps )
	$(INSTALL) -m 644 -c  dev/cs_CZ.ps $(DESTDIR)$(FIG2DEV_LIBDIR)

DEFINES = $(NEED_STRERROR) $(HAVE_NO_STRCASECMP) $(HAVE_NO_STRNCASECMP) $(USEINLINE) \
	$(I18N_DEFS) $(HAVE_SETMODE)

# **************************************************************
# *** You shouldn't have to change anything below this point ***
# **************************************************************

DIR_DEFS=	-DBITMAPDIR=\\\"$(DESTDIR)$(XFIGLIBDIR)/bitmaps\\\"

DUSEPNG = -DUSE_PNG
PNGLIBS = -L$(PNGLIBDIR) -lpng -lz

DUSEJPEG = -DUSE_JPEG
JPEGINC = -I$(JPEGINCDIR)

JPEGLIB = -L$(JPEGLIBDIR) -ljpeg

IMAKE_DEFINES = $(DUSEPNG) $(DUSEJPEG) $(DUSEXPM)

DEVDEFINES = $(DUSEPNG) $(DUSEJPEG) $(DUSEXPM) $(XPMINC) $(JPEGINC) $(DDNFSS) $(DDA4) \
		$(DDLATEX2E_GRAPHICS) $(DDEPSFIG) $(DDIBMGEC) $(DDDVIPS) $(I18N_DEV_DEFS)

DEVDIR = dev

SUBDIRS = $(DEVDIR)

LIBTRANSFIG = $(DEVDIR)/libtransfig.a

INCLUDES = -I..

LOCAL_LIBRARIES = $(LIBTRANSFIG) $(JPEGLIB)

SYS_LIBRARIES = $(PNGLIBS) $(XPMLIBS) -lm

DEPLIBS = $(LIBTRANSFIG)

GETOPTC=   getopt.c
GETOPTO=   getopt.o

SRCS = fig2dev.c psfonts.c iso2tex.c arrow.c bound.c colors.c trans_spline.c \
	free.c read.c read1_3.c latex_line.c $(STRSTRC) $(GETOPTC)
OBJS = fig2dev.o psfonts.o iso2tex.o arrow.o bound.o colors.o trans_spline.o \
	free.o read.o read1_3.o latex_line.o $(STRSTRO) $(GETOPTO)

fig2dev: $(DEPLIBJPEG) $(DEPLIBS)

RGBFILE = -DRGB_FILE=\"$(RGB)\"

colors.o:  Imakefile
	$(RM) $@
	 $(CC) -c $(CFLAGS)  $(RGBFILE) $*.c

fig2dev.o:  fig2dev.c drivers.h ../patchlevel.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

# only compile our jpeg if the use doesn't have one installed

$(LIBTRANSFIG)::
	cd $(DEVDIR); $(MAKE) DEFINES="$(DEVDEFINES) $(DIR_DEFS)" libtransfig.a

depend::
	@for flag in ${MAKEFLAGS} ''; do \
	case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
	echo "depending" "in $(CURRENT_DIR)/$$i..."; \
	(cd $$i && $(MAKE) $(MFLAGS)  depend); \
	done

 PROGRAM = fig2dev

all:: fig2dev

fig2dev: $(OBJS) $(DEPLIBS)
	$(RM) $@
	$(CCLINK) -o $@ $(LDOPTIONS) $(OBJS) $(LOCAL_LIBRARIES) $(LDLIBS)  $(EXTRA_LOAD_FLAGS)

install:: fig2dev
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  fig2dev $(DESTDIR)$(BINDIR)/fig2dev

install.man:: fig2dev.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) fig2dev.man $(DESTDIR)$(MANDIR)/fig2dev.$(MANSUFFIX)

depend::
	$(DEPEND) $(DEPENDFLAGS) -- $(ALLDEFINES) $(DEPEND_DEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

clean::
	$(RM) fig2dev

all:: fig2dev.man fig2ps2tex.man pic2tpic.man

# Install the tk bitmaps here
install::
	@(cd bitmaps ; \
	if [ -d $(DESTDIR)$(XFIGLIBDIR)/bitmaps ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(XFIGLIBDIR)/bitmaps ); fi ; \
	echo Copying bitmap files for tk to $(DESTDIR)$(XFIGLIBDIR)/bitmaps ; \
	for f in * ; do \
	      $(INSTALL) -m 644 -c $$f $(DESTDIR)$(XFIGLIBDIR)/bitmaps ; \
	done) ;

install:: fig2ps2tex.script
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTBINFLAGS) fig2ps2tex.script $(DESTDIR)$(BINDIR)/fig2ps2tex

install:: fig2ps2tex.sh.script
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTBINFLAGS) fig2ps2tex.sh.script $(DESTDIR)$(BINDIR)/fig2ps2tex.sh

install:: pic2tpic.script
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTBINFLAGS) pic2tpic.script $(DESTDIR)$(BINDIR)/pic2tpic

install.man:: fig2ps2tex.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) fig2ps2tex.man $(DESTDIR)$(MANDIR)/fig2ps2tex.$(MANSUFFIX)

install.man:: pic2tpic.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) pic2tpic.man $(DESTDIR)$(MANDIR)/pic2tpic.$(MANSUFFIX)

fig2dev.man:: ../doc/fig2dev.1
	$(RM) fig2dev.man
	-$(LN) ../doc/fig2dev.1 fig2dev.man

fig2ps2tex.man:: ../doc/fig2ps2tex.1
	$(RM) fig2ps2tex.man
	-$(LN) ../doc/fig2ps2tex.1 fig2ps2tex.man

pic2tpic.man:: ../doc/pic2tpic.1
	$(RM) pic2tpic.man
	-$(LN) ../doc/pic2tpic.1 pic2tpic.man

# ----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	 $(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

man_keywords::
	catman -M $(DESTDIR)$(MANPATH) -w

# ----------------------------------------------------------------------
# rules for building in SUBDIRS - do not edit

install::
	@for flag in ${MAKEFLAGS} ''; do \
	case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
	echo "installing" "in $(CURRENT_DIR)/$$i..."; \
	(cd $$i && $(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) install); \
	done

install.man::
	@for flag in ${MAKEFLAGS} ''; do \
	case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
	echo "installing man pages" "in $(CURRENT_DIR)/$$i..."; \
	(cd $$i && $(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) install.man); \
	done

clean::
	@for flag in ${MAKEFLAGS} ''; do \
	case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
	echo "cleaning" "in $(CURRENT_DIR)/$$i..."; \
	(cd $$i && $(MAKE) $(MFLAGS)  clean); \
	done

tags::
	@for flag in ${MAKEFLAGS} ''; do \
	case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
	echo "tagging" "in $(CURRENT_DIR)/$$i..."; \
	(cd $$i && $(MAKE) $(MFLAGS) TAGS='$(TAGS)' tags); \
	done

$(ONESUBDIR)/Makefile:
	@for flag in ${MAKEFLAGS} ''; do \
	case "$$flag" in *=*) ;; *[n]*) executeit="no";; esac; done; \
	cd $(ONESUBDIR); \
	if [ "$$executeit" != "no" ]; then \
	$(IMAKE_CMD) -DTOPDIR=$(IMAKETOP) -DCURDIR=$(ONECURDIR)$(ONESUBDIR); \
	fi;

Makefiles::
	-@for flag in ${MAKEFLAGS} ''; do \
	case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for flag in ${MAKEFLAGS} ''; do \
	case "$$flag" in *=*) ;; *[n]*) executeit="no";; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
	case "$(CURRENT_DIR)" in \
	.) curdir= ;; \
	*) curdir=$(CURRENT_DIR)/ ;; \
	esac; \
	echo "making Makefiles in $$curdir$$i..."; \
	itmp="$$i" \
	curtmp="$(CURRENT_DIR)" \
	toptmp=""; \
	case "$$itmp" in \
	../?*) \
	while echo "$$itmp" | grep '^../' > /dev/null;\
	do \
	toptmp="/`basename $$curtmp`$$toptmp"; \
	curtmp="`dirname $$curtmp`"; \
	itmp="`echo $$itmp | sed 's;../;;'`"; \
	done \
	;; \
	esac; \
	case "$$itmp" in \
	*/?*/?*/?*/?*) newtop=../../../../..;; \
	*/?*/?*/?*) newtop=../../../..;; \
	*/?*/?*) newtop=../../..;; \
	*/?*) newtop=../..;; \
	*) newtop=..;; \
	esac; \
	newtop="$$newtop$$toptmp"; \
	case "$(TOP)" in \
	/?*) imaketop=$(TOP) \
	imakeprefix= ;; \
	.) imaketop=$$newtop \
	imakeprefix=$$newtop/ ;; \
	*) imaketop=$$newtop/$(TOP) \
	imakeprefix=$$newtop/ ;; \
	esac; \
	$(RM) $$i/Makefile.bak; \
	if [ -f $$i/Makefile ]; then \
	echo "	$(MV) Makefile Makefile.bak"; \
	if [ "$$executeit" != "no" ]; then \
	$(MV) $$i/Makefile $$i/Makefile.bak; \
	fi; \
	fi; \
	$(MAKE) $(MFLAGS) $(MAKE_OPTS) ONESUBDIR=$$i ONECURDIR=$$curdir IMAKETOP=$$imaketop IMAKEPREFIX=$$imakeprefix $$i/Makefile; \
	cd $$i; \
	$(MAKE) $(MFLAGS) Makefiles; \
	cd $$newtop; \
	done

includes::
	@for flag in ${MAKEFLAGS} ''; do \
	case "$$flag" in *=*) ;; *[ik]*) set +e;; esac; done; \
	for i in $(SUBDIRS) ;\
	do \
	echo including "in $(CURRENT_DIR)/$$i..."; \
	(cd $$i && $(MAKE) $(MFLAGS)  includes); \
	done

# ----------------------------------------------------------------------
# dependencies generated by makedepend

